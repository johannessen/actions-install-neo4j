name: 'Install Neo4j'
description: 'Install a fresh Neo4j server locally and start it'
inputs:
  neo4j-version:
    description: 'Neo4j version to install'
    default: '5.26'
  password:
    description: 'Neo4j password'
    required: true
  neo4j-dist-url:
    description: 'Base URL for downloading Neo4j distributions'
    default: 'https://dist.neo4j.org'
outputs:
  neo4j-version:
    description: 'Neo4j version actually installed'
    value: ${{ steps.aliases.outputs.neo4j-version }}
runs:
  using: "composite"
  steps:

    - name: Tarball cache
      uses: actions/cache@v4
      with:
        key: neo4j-${{ inputs.neo4j-version }}-${{ runner.os }}
        path: |
          neo4j-community-*-unix.tar.gz

    - name: Resolve Neo4j version
      run: |
        ALIAS="${{ inputs.neo4j-version }}"
        case "$ALIAS" in
          1  ) NEO4J=1.9     ;;
          2  ) NEO4J=2.3     ;;
          3  ) NEO4J=3.5     ;;
          4  ) NEO4J=4.4     ;;
          5  ) NEO4J=5.26    ;;
          *  ) NEO4J=$ALIAS  ;;
        esac
        if [ "$NEO4J" != "$ALIAS" ] ; then
          echo "Resolved Neo4j '$ALIAS' to Neo4j '$NEO4J'."
        fi
        ALIAS="$NEO4J"
        case "$ALIAS" in
          1.9   ) NEO4J=1.9.9   ;;
          2.0   ) NEO4J=2.0.5   ;;
          2.1   ) NEO4J=2.1.8   ;;
          2.2   ) NEO4J=2.2.10  ;;
          2.3   ) NEO4J=2.3.12  ;;
          3.0   ) NEO4J=3.0.12  ;;
          3.1   ) NEO4J=3.1.9   ;;
          3.2   ) NEO4J=3.2.14  ;;
          3.3   ) NEO4J=3.3.9   ;;
          3.4   ) NEO4J=3.4.18  ;;
          3.5   ) NEO4J=3.5.35  ;;
          4.0   ) NEO4J=4.0.12  ;;
          4.1   ) NEO4J=4.1.13  ;;
          4.2   ) NEO4J=4.2.19  ;;
          4.3   ) NEO4J=4.3.24  ;;
          4.4   ) NEO4J=4.4.43  ;;
          5.0   ) NEO4J=5.1.0   ;;
          5.1   ) NEO4J=5.1.0   ;;
          5.2   ) NEO4J=5.2.0   ;;
          5.3   ) NEO4J=5.3.0   ;;
          5.4   ) NEO4J=5.4.0   ;;
          5.5   ) NEO4J=5.5.0   ;;
          5.6   ) NEO4J=5.6.0   ;;
          5.7   ) NEO4J=5.7.0   ;;
          5.8   ) NEO4J=5.8.0   ;;
          5.9   ) NEO4J=5.9.0   ;;
          5.10  ) NEO4J=5.10.0  ;;
          5.11  ) NEO4J=5.11.0  ;;
          5.12  ) NEO4J=5.12.0  ;;
          5.13  ) NEO4J=5.13.0  ;;
          5.14  ) NEO4J=5.14.0  ;;
          5.15  ) NEO4J=5.15.0  ;;
          5.16  ) NEO4J=5.16.0  ;;
          5.17  ) NEO4J=5.17.0  ;;
          5.18  ) NEO4J=5.18.1  ;;
          5.19  ) NEO4J=5.19.0  ;;
          5.20  ) NEO4J=5.20.0  ;;
          5.21  ) NEO4J=5.21.2  ;;
          5.22  ) NEO4J=5.22.0  ;;
          5.23  ) NEO4J=5.23.0  ;;
          5.24  ) NEO4J=5.24.2  ;;
          5.25  ) NEO4J=5.25.1  ;;
          5.26  ) NEO4J=5.26.6  ;;
          *     ) NEO4J=$NEO4J  ;;
        esac
        if perl -e 'exit $ARGV[0] !~ /^20[0-9]{2}\b/' "$NEO4J" ; then
          NEO4J=2025.04.0
          echo "::NOTICE:: Resolved Neo4j '$ALIAS' to Neo4j '$NEO4J'."
        fi
        if [ "$NEO4J" != "$ALIAS" ] ; then
          echo "Resolved Neo4j '$ALIAS' to Neo4j '$NEO4J'."
        fi
        echo "neo4j-version=$NEO4J" >> "$GITHUB_OUTPUT"

        NEO4J_MAJOR_VERSION=$( echo "$NEO4J" | perl -pe 's/\D.*//' )
        case "$NEO4J_MAJOR_VERSION" in
          [123]    ) JAVA=8   ;;
          4        ) JAVA=11  ;;
          5        ) JAVA=17  ;;
          2025     ) JAVA=21  ;;
          *        ) JAVA=21  ;;
        esac
        echo "java-version=$JAVA" >> "$GITHUB_OUTPUT"
      shell: bash
      id: aliases

    - name: Install Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ steps.aliases.outputs.java-version }}

    - name: Install Neo4j
      run: |
        NEO4J="${{ steps.aliases.outputs.neo4j-version }}"
        if [ ! -e "neo4j-community-$NEO4J-unix.tar.gz" ]
        then
          echo "Cache miss, downloading Neo4j $NEO4J"
          NEO4J_DISTS="${{ inputs.neo4j-dist-url }}"
          curl -sLO $NEO4J_DISTS/neo4j-community-$NEO4J-unix.tar.gz
        fi
        tar -xzf neo4j-community-$NEO4J-unix.tar.gz

        eval "${JAVA_HOME:-/usr}/bin/java -version"
        echo "$JAVA_HOME" | tee neo4j-javahome
      shell: bash

    - name: Start Neo4j 5+
      if: ${{ startsWith( steps.aliases.outputs.neo4j-version , '5.') || startsWith( steps.aliases.outputs.neo4j-version , '20') }}
      run: |
        NEO4J="${{ steps.aliases.outputs.neo4j-version }}"
        neo4j-community-$NEO4J/bin/neo4j-admin dbms set-initial-password "${{ inputs.password }}" || echo "Password change using neo4j-admin failed."
        neo4j-community-$NEO4J/bin/neo4j start
        perl -E "print'Waiting for server to be ready ...';for(0..60){last if 0+\`grep Started neo4j-community-$NEO4J/logs/neo4j.log > /dev/null 2>&1 && echo 1 || echo 0\`;print'.';sleep 1}say' OK.'"
        cat neo4j-community-$NEO4J/logs/neo4j.log
        neo4j-community-$NEO4J/bin/neo4j status
      shell: bash

    - name: Start Neo4j 3/4
      if: ${{ startsWith( steps.aliases.outputs.neo4j-version , '3.') || startsWith( steps.aliases.outputs.neo4j-version , '4.') }}
      run: |
        NEO4J="${{ steps.aliases.outputs.neo4j-version }}"
        neo4j-community-$NEO4J/bin/neo4j-admin set-initial-password "${{ inputs.password }}" || echo "Password change using neo4j-admin failed."
        neo4j-community-$NEO4J/bin/neo4j start
        perl -E "print'Waiting for server to be ready ...';for(0..60){last if 0+\`grep Started neo4j-community-$NEO4J/logs/neo4j.log > /dev/null 2>&1 && echo 1 || echo 0\`;print'.';sleep 1}say' OK.'"
        cat neo4j-community-$NEO4J/logs/neo4j.log
        neo4j-community-$NEO4J/bin/neo4j status
      shell: bash

    - name: Start Neo4j 1/2
      if: ${{ startsWith( steps.aliases.outputs.neo4j-version , '1.') || startsWith( steps.aliases.outputs.neo4j-version , '2.') }}
      run: |
        NEO4J="${{ steps.aliases.outputs.neo4j-version }}"
        neo4j-community-$NEO4J/bin/neo4j start-no-wait
        perl -E "print'Waiting for server to be ready ...';for(0..60){last if 0+\`grep 'Started\\\|interface ready' neo4j-community-$NEO4J/data/log/console.log > /dev/null 2>&1 && echo 1 || echo 0\`;print'.';sleep 1}say' OK.'"
        sleep 1
        curl -u neo4j:neo4j -fid "{\"password\":\"${{ inputs.password }}\"}" -H "Content-Type:application/json" -s http://localhost:7474/user/neo4j/password || echo "Password change using cURL failed. (This is expected on Neo4j 1.)"
        cat neo4j-community-$NEO4J/data/log/console.log
        neo4j-community-$NEO4J/bin/neo4j status
      shell: bash
